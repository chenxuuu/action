name: 8850

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v1
    - name: prepare software
      run: |
        cd ..
        git clone https://github.com/openLuat/LuatOS LuatOS
        cd LuatOS
        wget -q https://github.com/openLuat/LuatOS/releases/download/v0.0.1/gcc-arm-none-eabi-10.3-2021.10-x86_64-linux.tar.bz2 -O gcc-arm-none-eabi-10.3-2021.10-x86_64-linux.tar.bz2
        tar jxvf gcc-arm-none-eabi-10.3-2021.10-x86_64-linux.tar.bz2
        ls /home/runner/work/action/LuatOS/gcc-arm-none-eabi-10.3-2021.10/bin
        pwd
    - name: clone 8850
      env:
        REPO: ${{ secrets.REPO8850 }}
      run: |
        sudo sh -c "curl https://raw.githubusercontent.com/kadwanev/retry/master/retry -o /usr/local/bin/retry && chmod +x /usr/local/bin/retry"
        cd ..
        retry 'git clone --branch=luatos-soc $REPO 8850'
    - name: make
      run: |
        cd ..
        chmod 777 -R 8850/
        cd 8850
        sed -i 's/`pwd`\/prebuilts\/linux\/gcc-arm-none-eabi\/bin/\/home\/runner\/work\/action\/LuatOS\/gcc-arm-none-eabi-10.3-2021.10\/bin/g' build.sh
        cp CMakeLists样本.txt CMakeLists.txt
        sed -i 's/E:\/\/LuatOS/\/home\/runner\/work\/action\/LuatOS\//g' CMakeLists.txt
        chmod +x build.sh
        chmod +x prebuilts/linux/bin/*
        chmod +x tools/linux/*
        mkdir out
        mkdir out/8850BM_LuatOS_debug
        bash build_8850DM.sh
        mkdir ../LuatOS/luatosfw
        cp hex/8850BM_LuatOS_debug/*.soc ../LuatOS/luatosfw
    - name: Upload artifact
      uses: actions/upload-artifact@v1
      with:
        name: soc8850
        path: luatosfw
    - name: report if failure
      if: always()
      env:
        STATUS: ${{ job.status }}
        MQTTADDR: ${{ secrets.MQTTADDR }}
        MQTTPORT: ${{ secrets.MQTTPORT }}
        MQTTTOPIC: ${{ secrets.MQTTTOPIC }}
        DD_APPKEY: ${{ secrets.DD_APPKEY }}
        DD_APPSECRET: ${{ secrets.DD_APPSECRET }}
        DD_NOTIFY_LIST: ${{ secrets.DD_NOTIFY_LIST }}
        DD_API_TOKEN: ${{ secrets.DD_API_TOKEN }}
        DD_API_SEND: ${{ secrets.DD_API_SEND }}
      run: |
        sudo pip3 install paho_mqtt gitpython requests
        cd tools
        if [ "$STATUS" = "failure" ];then python3 ciNotify.py $MQTTADDR $MQTTPORT $MQTTTOPIC "https://github.com/openLuat/LuatOS/actions/runs/$GITHUB_RUN_ID" "8850" "$DD_APPKEY" "$DD_APPSECRET" "$DD_NOTIFY_LIST" "$DD_API_TOKEN" "$DD_API_SEND"; fi
